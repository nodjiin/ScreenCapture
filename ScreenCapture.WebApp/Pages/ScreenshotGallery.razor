@page "/Gallery/Screenshot"

@using ScreenCapture.WebApp.Services.Interfaces;
@inject IMediaExplorer explorer

<PageTitle>Screenshots Gallery</PageTitle>

<CollectionGridDisplayer Collection="mediaInfoCollection">
    <EmptyCollectionTemplate>
        <text>No screenshot has been found.</text>
    </EmptyCollectionTemplate>
    <CollectionItemTemplate>
        <ImageDisplayer Info="@context" />
    </CollectionItemTemplate>
</CollectionGridDisplayer>

<PageNavigationBar OnPageItemClick="ChangePage" PageCount="@pageCount" />

@code {
    private const int pagesize = 16;
    private List<MediaInfo> mediaInfoCollection = new List<MediaInfo>();
    private int pageCount = 1;

    protected override async Task OnAfterRenderAsync(bool first)
    {
        if (first)
        {
            await ChangePage(0);
        }

        // this duplicate StateHasChanged seems necessary for some reason... TODO investigate
        StateHasChanged();
    }

    private async Task ChangePage(int pageNumber)
    {
        mediaInfoCollection.Clear();
        var screenshots = await explorer.FindStoredScreenshots();
        pageCount = screenshots.Length;

        for (int i = pageNumber; i < pagesize * (pageNumber + 1) && i < screenshots.Length; i++)
        {
            var info = await explorer.GetScreenshotInformation(screenshots[i]);
            if (info != null)
            {
                mediaInfoCollection.Add(info);
            }
        }
        
        StateHasChanged();
    }
}
